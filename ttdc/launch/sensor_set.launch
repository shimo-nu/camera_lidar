<?xml version="1.0"?>
<launch>
    <arg name="ipcamera1_config_file" default="$(find ttdc)/config/ost_1-1.yaml" />
    <arg name="ipcamera2_config_file" default="$(find ttdc)/config/ost_1-2.yaml" />
    <arg name="ipcamera3_config_file" default="$(find ttdc)/config/ost_1-2.yaml" />
    <arg name="ipcamera4_config_file" default="$(find ttdc)/config/ost_1-2.yaml" />
    <arg name="camera1_ip" default="$(env CAMERA1_IP)"/>
    <arg name="camera2_ip" default="$(env CAMERA2_IP)"/>
    <arg name="camera3_ip" default="$(env CAMERA3_IP)"/>
    <arg name="camera4_ip" default="$(env CAMERA4_IP)"/>
    <arg name="device_ip" default="$(env LIDAR_IP)"/>
    <arg name="lidar_port" default="$(env LIDAR_PORT)"/>
    <arg name="isLiDAR" default="false"/>
    <arg name="isCAMERA1" default="false"/>
    <arg name="isCAMERA2" default="false"/>
    <arg name="isCAMERA3" default="false"/>
    <arg name="isCAMERA4" default="false"/>
    <arg name="system_ns" default="system_01"/>
    <arg name="bag_filepath" default=""/>
    <!-- <node pkg="gscam" type="gscam" name="ipcam1" output="screen">
        <param name="camera_name" type="string" value="camera" />
        <param name="camera_info_url" type="string" value="file://$(arg ipcamera1_config_file)" />
        <param name="frame_id" type="string" value="cam1_link" />
        <param name="reopen_on_eof" type="bool" value="false" />
        <param name="sync_sink" type="bool" value="false" />
        <param name="gscam_config" type="string"
            value='souphttpsrc is-live=1 extra-headers="test,Authorization=\"Basic\ YWRtaW46MTIzNDU=\"" location="http://$(arg camera1_ip)/action/stream?subject=liveplay&amp;stream=0" ! h264parse ! decodebin ! videoconvert' />
        <remap from="camera/image_raw" to="cam1/image_raw" />
        <remap from="camera/image_info" to="cam1/image_info" />
    </node> -->
    <group if="$(arg isCAMERA1)">
        <node pkg="ipcamera_driver" type="ipcamera_driver" name="$(arg system_ns)_ipcam1" output="screen">
            <param name="video_url" type="string" value="rtsp://$(arg camera1_ip):554/live/main" />
            <param name="camera_info_url" type="string" value="file://$(arg ipcamera1_config_file)" />
            <param name="frame_id" type="string" value="$(arg system_ns)_cam01_link" />
            <remap from="camera/image" to="$(arg system_ns)/cam01/image_raw" />
        </node>
        <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_optical_tf1" args="0.13 0.075 -0.1 -0.76 -0.01 4.76 pandar $(arg system_ns)_cam1_link" />
        <group ns="$(arg system_ns)/cam01">
            <node name="ability_rectifier" pkg="image_proc" type="image_proc" output="screen"/>
        </group>
    </group>

    <group if="$(arg isCAMERA2)">
        <node pkg="ipcamera_driver" type="ipcamera_driver" name="$(arg system_ns)_ipcam2" output="screen">
            <param name="video_url" type="string" value="rtsp://$(arg camera2_ip):554/live/main" />
            <param name="camera_info_url" type="string" value="file://$(arg ipcamera2_config_file)" />
            <param name="frame_id" type="string" value="$(arg system_ns)_cam02_link" />
            <remap from="camera/image" to="$(arg system_ns)/cam02/image_raw" />
        </node>
        <group ns="$(arg system_ns)/cam02">
            <node name="ability_rectifier" pkg="image_proc" type="image_proc" output="screen"/>
        </group>
        <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_optical_tf2" args="0.13 -0.075 -0.1 -2.44 0.07 4.75 pandar $(arg system_ns)_cam2_link" />
    </group>
    <group if="$(arg isCAMERA3)">
        <node pkg="ipcamera_driver" type="ipcamera_driver" name="$(arg system_ns)_ipcam3" output="screen">
            <param name="video_url" type="string" value="rtsp://$(arg camera3_ip):554/live/main" />
            <param name="camera_info_url" type="string" value="file://$(arg ipcamera3_config_file)" />
            <param name="frame_id" type="string" value="$(arg system_ns)_cam03_link" />
            <remap from="camera/image" to="$(arg system_ns)/cam03/image_raw" />
        </node>
        <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_optical_tf3" args="0.13 0.075 -0.1 -0.76 -0.01 4.76 pandar $(arg system_ns)_cam03_link" />
        <group ns="$(arg system_ns)/cam03">
            <node name="ability_rectifier" pkg="image_proc" type="image_proc" output="screen"/>
        </group>
    </group>
    <group if="$(arg isCAMERA4)">
        <node pkg="ipcamera_driver" type="ipcamera_driver" name="$(arg system_ns)_ipcam4" output="screen">
            <param name="video_url" type="string" value="rtsp://$(arg camera4_ip):554/live/main" />
            <param name="camera_info_url" type="string" value="file://$(arg ipcamera4_config_file)" />
            <param name="frame_id" type="string" value="$(arg system_ns)_cam04_link" />
            <remap from="camera/image" to="$(arg system_ns)/cam04/image_raw" />
        </node>
        <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_optical_tf4" args="0.13 0.075 -0.1 -0.76 -0.01 4.76 pandar $(arg system_ns)_cam04_link" />
        <group ns="$(arg system_ns)/cam04">
            <node name="ability_rectifier" pkg="image_proc" type="image_proc" output="screen"/>
        </group>
    </group>
    <group if="$(arg isLiDAR)">
        <include file="$(find pandar_pointcloud)/launch/pandarXT32.launch">
            <arg name="device_ip" value="$(arg device_ip)" />
            <arg name="lidar_port" value="$(arg lidar_port)"/>
        </include>
    </group>
    <node pkg="rosbag" type="record" name="$(arg system_ns)_recorder" args="record -o /mnt/bag/ -a"/>
</launch>
