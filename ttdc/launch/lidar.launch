<launch>
    <arg name="ipcamera1_config_file" default="$(find ttdc)/config/ost_1-1.yaml" />
    <arg name="ipcamera2_config_file" default="$(find ttdc)/config/ost_1-2.yaml" />
    <arg name="camera1_ip" default="192.168.2.120"/>
    <arg name="camera2_ip" default="192.168.3.120"/>
    <arg name="device_ip" default="192.168.1.201"/>
    <arg name="system_ns" default="system_01"/>
    <!-- <node pkg="gscam" type="gscam" name="ipcam1" output="screen">
        <param name="camera_name" type="string" value="camera" />
        <param name="camera_info_url" type="string" value="file://$(arg ipcamera1_config_file)" />
        <param name="frame_id" type="string" value="cam1_link" />
        <param name="reopen_on_eof" type="bool" value="false" />
        <param name="sync_sink" type="bool" value="false" />
        <param name="gscam_config" type="string"
            value='souphttpsrc is-live=1 extra-headers="test,Authorization=\"Basic\ YWRtaW46MTIzNDU=\"" location="http://$(arg camera1_ip)/action/stream?subject=liveplay&amp;stream=0" ! h264parse ! decodebin ! videoconvert' />
        <remap from="camera/image_raw" to="cam1/image_raw" />
        <remap from="camera/image_info" to="cam1/image_info" />
    </node> -->
    <node pkg="ipcamera_driver" type="ipcamera_driver" name="$(arg system_ns)_ipcam1" output="screen">
        <param name="video_url" type="string" value="rtsp://$(arg camera1_ip):554/live/main" />
        <param name="camera_info_url" type="string" value="file://$(arg ipcamera1_config_file)" />
        <param name="frame_id" type="string" value="$(arg system_ns)_cam01_link" />
        <remap from="camera/image" to="$(arg system_ns)/cam01/image_raw" />
    </node>
    <group ns="$(arg system_ns)/cam01">
    <node name="ability_rectifier" pkg="image_proc" type="image_proc" output="screen"/>
    </group>

    <!-- <node pkg="gscam" type="gscam" name="ipcam2" output="screen">
        <param name="camera_name" type="string" value="camera" />
        <param name="camera_info_url" type="string" value="file://$(arg ipcamera2_config_file)" />
        <param name="frame_id" type="string" value="cam2_link" />
        <param name="reopen_on_eof" type="bool" value="true" />
        <param name="sync_sink" type="bool" value="true" />
        <param name="gscam_config" type="string"
            value='souphttpsrc is-live=1 extra-headers="test,Authorization=\"Basic\ YWRtaW46MTIzNDU=\"" location="http://$(arg camera2_ip)/action/stream?subject=liveplay&amp;stream=0" ! h264parse ! decodebin ! videoconvert' />
        <remap from="camera/image_raw" to="cam2/image_raw" />
        <remap from="camera/image_info" to="cam2/image_info" />
    </node> -->
    <node pkg="ipcamera_driver" type="ipcamera_driver" name="$(arg system_ns)_ipcam2" output="screen">
        <param name="video_url" type="string" value="rtsp://$(arg camera2_ip):554/live/main" />
        <param name="camera_info_url" type="string" value="file://$(arg ipcamera2_config_file)" />
        <param name="frame_id" type="string" value="$(arg system_ns)_cam02_link" />
        <remap from="camera/image" to="$(arg system_ns)/cam02/image_raw" />
    </node>
    <group ns="$(arg system_ns)/cam02">
    <node name="ability_rectifier" pkg="image_proc" type="image_proc" output="screen"/>
    </group>

    <include file="$(find pandar_pointcloud)/launch/pandarXT32.launch">
        <arg name="device_ip" value="$(arg device_ip)" />
    </include>
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_optical_tf1" args="0.13 0.075 -0.1 -0.76 -0.01 4.76 pandar cam1_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_optical_tf2" args="0.13 -0.075 -0.1 -2.44 0.07 4.75 pandar cam2_link" />
    <node pkg="rviz" type="rviz" name="ttdc_rviz" args="-d $(find ttdc)/config/rviz.rviz" />
</launch>
